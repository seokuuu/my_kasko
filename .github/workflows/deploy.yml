name: Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_docker_push:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/reactjs-docker:latest
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/reactjs-docker:latest
          cache-to: type=inline
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GIT_TOKEN }}

  pull_deploy:
    name: Connect server ssh and pull from container registry
    needs: build_docker_push
    runs-on: ubuntu-20.04
    steps:
      - name: connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_PORT }}
          script: |
            sudo docker login -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }} ${{ secrets.NCP_CONTAINER_REGISTRY }}
            sudo docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/reactjs-docker:latest
            sudo docker stop reactjs-docker
            sudo docker rm reactjs-docker
            sudo docker run -d -p 3000:80 ${{ secrets.NCP_CONTAINER_REGISTRY }}/reactjs-docker:latest
            sudo docker image prune -f